/// <summary>
/// Interface for XML to JSON conversion
/// </summary>
public interface IXmlToJson
{


/// <summary>
/// 
/// </summary>
/// <param name="xml">Xml - read as as a String </param>
/// <param name="mappings">Reference for a IMappings variable - containing the mapping info - which wraps the JSON Schema</param>
/// <param name="settings">Reference for a IMappings variable - containing the mapping info - which wraps the JSON Schema</param>
/// <returns> Converted Json</returns>
public string convertXmlToJson(String xml,IMappings mappings, ISettings settings);

/// <summary>
/// Validate a Json File against a Schema
/// </summary>
/// <param name="jsonSchema">The Json Schema - represented as a String</param>
/// <param name="generatedJson">The Json to be validated</param>
/// <returns>True/False - depending on pass/fail</returns>
public Boolean validateJson(String jsonSchema, String generatedJson);

/// <summary>
/// write Json to a file
/// </summary>
/// <param name="jsonFileName">File Name</param>
/// <param name="Json">Json as a String</param>
/// <returns>Write Successful or not</returns>
public Boolean WriteJsonToFile(String jsonFileName, string Json);

} 

/// <summary>
/// Class containing the settings for conversion
/// </summary>
public abstract class ISettings
{
	

}

/// <summary>
/// Interface containing mappings info - possible implementation via a Json Schema
/// </summary>
public interface IMappings
{
    /// <summary>
    /// Intitialize mappings
    /// </summary>
    /// <param name="mappings">String to be formatted - one implementation will have the JSON Schema</param>
    public void InitializeMappings(string mappings);
}
